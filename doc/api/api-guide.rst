=========
API guide
=========

CKAN offers a flexible and robust APIs to interact with the CKAN site. 

---------------------
Legacy APIs
---------------------

---------------------
Making an API request
---------------------
To call the CKAN API, a JSON dictionary needs to be posted in an HTTP POST request to one of CKAN APIs URLs.

There are a couple of ways to call the APIs:

#. Through command-line Curl::

    curl https://demo.ckan.org/api/3/action/group_list

#. Using Python::

    response = urllib2.urlopen('http://demo.ckan.org/api/3/action/group_list', data_string)

.. Note::

  It's best to specify the CKAN version (``.../api/3/...``) that the request is made with, because this ensures that the API client will work across different sites running different version of CKAN (version 3 is currently the latest).

A response example:

.. code-block:: bash

    {
      "help": "...",
      "result": [
          "data-explorer",
          "department-of-ricky",
          "geo-examples",
          "geothermal-data",
          "reykjavik",
          "skeenawild-conservation-trust"
          ],
      "success": true
    }
* ``success``: ``true`` or ``false``.
* ``help``: the documentation string for the function you called.
* ``result``: the returned result from the function that was called. If there was an error responding the request, the dictionary will contain an ``error`` key with details of the error instead of the ``result`` key. A response dictionary containing an error will look like this:

.. code-block:: bash

    {
      "help": "Creates a package",
      "success": false,
      "error": {
          "message": "Access denied",
          "__type": "Authorization Error"
      }
    }

Response Status codes:

====  ======
Code  Name
====  ======
200   OK
201   OK and new object created (referred to in the Location header)
301   Moved Permanently
400   Bad Request
403   Not Authorized
404   Not Found
409   Conflict (e.g. name already exists)
500   Service Error
====  ======

---------------------
Authentication and API tokens
---------------------
Some API functions require authorization. Provide the API token in the request header of the API request, like so:

#. Curl::

    curl -H "Authorization: XXX" https://demo.ckan.org/api/3/action/am_following_user?˓→id=markw

#. Python::

    request = urllib2.Request('https://demo.ckan.org/api/3/action/dashboard_activity_list')
    request.add_header('Authorization', 'XXX')
    response_dict = json.loads(urllib2.urlopen(request, '{}').read())

API tokens can be generated by logged-in users through the profiles. Site maintainers can also edit the API token generator settings, like setting the token expiration time, in the site configuration file (``conf.ini``).

---------------------
API Examples
--------------------- 
Here's a list of most useful API request examples and their descriptions: `API examples <https://docs.ckan.org/en/2.11/api/index.html#api-examples>`_

Some Python code examples can be found in the ``python-examples.py`` file.
